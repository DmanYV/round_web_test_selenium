{"uid":"97eff75f0407a3e","name":"Просмотр списка заблокированных пользователей","fullName":"tests.test_editing_profile.TestEditingProfile#test_view_the_list_of_blocked_users","historyId":"eda85cfe274378cadbd16da85ef32a92","time":{"start":1737929487925,"stop":1737929487925,"duration":0},"description":"Проверка происходит на пользователе Aleska, после теста разблокируются пользователи","descriptionHtml":"<p>Проверка происходит на пользователе Aleska, после теста разблокируются пользователи</p>\n","status":"broken","statusMessage":"urllib3.exceptions.ReadTimeoutError: HTTPConnectionPool(host='localhost', port=42775): Read timed out. (read timeout=120)","statusTrace":"self = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f0484b05f10>\nconn = <urllib3.connection.HTTPConnection object at 0x7f048525d370>\nmethod = 'POST', url = '/session'\nbody = '{\"capabilities\": {\"firstMatch\": [{}], \"alwaysMatch\": {\"browserName\": \"chrome\", \"pageLoadStrategy\": \"normal\", \"browser...in/chromium-browser\", \"args\": [\"--window-size=1920,1080\", \"--no-sandbox\", \"--disable-dev-shm-usage\", \"--headless\"]}}}}'\nheaders = HTTPHeaderDict({'Accept': 'application/json', 'Content-Type': 'application/json;charset=UTF-8', 'User-Agent': 'selenium/4.27.1 (python linux)', 'Connection': 'keep-alive'})\nretries = Retry(total=3, connect=None, read=None, redirect=None, status=None)\ntimeout = Timeout(connect=120, read=120, total=None), chunked = False\nresponse_conn = None, preload_content = True, decode_content = True\nenforce_content_length = True\n\n    def _make_request(\n        self,\n        conn: BaseHTTPConnection,\n        method: str,\n        url: str,\n        body: _TYPE_BODY | None = None,\n        headers: typing.Mapping[str, str] | None = None,\n        retries: Retry | None = None,\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        chunked: bool = False,\n        response_conn: BaseHTTPConnection | None = None,\n        preload_content: bool = True,\n        decode_content: bool = True,\n        enforce_content_length: bool = True,\n    ) -> BaseHTTPResponse:\n        \"\"\"\n        Perform a request on a given urllib connection object taken from our\n        pool.\n    \n        :param conn:\n            a connection from one of our connection pools\n    \n        :param method:\n            HTTP request method (such as GET, POST, PUT, etc.)\n    \n        :param url:\n            The URL to perform the request on.\n    \n        :param body:\n            Data to send in the request body, either :class:`str`, :class:`bytes`,\n            an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n    \n        :param headers:\n            Dictionary of custom headers to send, such as User-Agent,\n            If-None-Match, etc. If None, pool headers are used. If provided,\n            these headers completely replace any pool-specific headers.\n    \n        :param retries:\n            Configure the number of retries to allow before raising a\n            :class:`~urllib3.exceptions.MaxRetryError` exception.\n    \n            Pass ``None`` to retry until you receive a response. Pass a\n            :class:`~urllib3.util.retry.Retry` object for fine-grained control\n            over different types of retries.\n            Pass an integer number to retry connection errors that many times,\n            but no other types of errors. Pass zero to never retry.\n    \n            If ``False``, then retries are disabled and any exception is raised\n            immediately. Also, instead of raising a MaxRetryError on redirects,\n            the redirect response will be returned.\n    \n        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n    \n        :param timeout:\n            If specified, overrides the default timeout for this one\n            request. It may be a float (in seconds) or an instance of\n            :class:`urllib3.util.Timeout`.\n    \n        :param chunked:\n            If True, urllib3 will send the body using chunked transfer\n            encoding. Otherwise, urllib3 will send the body using the standard\n            content-length form. Defaults to False.\n    \n        :param response_conn:\n            Set this to ``None`` if you will handle releasing the connection or\n            set the connection to have the response release it.\n    \n        :param preload_content:\n          If True, the response's body will be preloaded during construction.\n    \n        :param decode_content:\n            If True, will attempt to decode the body based on the\n            'content-encoding' header.\n    \n        :param enforce_content_length:\n            Enforce content length checking. Body returned by server must match\n            value of Content-Length header, if present. Otherwise, raise error.\n        \"\"\"\n        self.num_requests += 1\n    \n        timeout_obj = self._get_timeout(timeout)\n        timeout_obj.start_connect()\n        conn.timeout = Timeout.resolve_default_timeout(timeout_obj.connect_timeout)\n    \n        try:\n            # Trigger any extra validation we need to do.\n            try:\n                self._validate_conn(conn)\n            except (SocketTimeout, BaseSSLError) as e:\n                self._raise_timeout(err=e, url=url, timeout_value=conn.timeout)\n                raise\n    \n        # _validate_conn() starts the connection to an HTTPS proxy\n        # so we need to wrap errors with 'ProxyError' here too.\n        except (\n            OSError,\n            NewConnectionError,\n            TimeoutError,\n            BaseSSLError,\n            CertificateError,\n            SSLError,\n        ) as e:\n            new_e: Exception = e\n            if isinstance(e, (BaseSSLError, CertificateError)):\n                new_e = SSLError(e)\n            # If the connection didn't successfully connect to it's proxy\n            # then there\n            if isinstance(\n                new_e, (OSError, NewConnectionError, TimeoutError, SSLError)\n            ) and (conn and conn.proxy and not conn.has_connected_to_proxy):\n                new_e = _wrap_proxy_error(new_e, conn.proxy.scheme)\n            raise new_e\n    \n        # conn.request() calls http.client.*.request, not the method in\n        # urllib3.request. It also calls makefile (recv) on the socket.\n        try:\n            conn.request(\n                method,\n                url,\n                body=body,\n                headers=headers,\n                chunked=chunked,\n                preload_content=preload_content,\n                decode_content=decode_content,\n                enforce_content_length=enforce_content_length,\n            )\n    \n        # We are swallowing BrokenPipeError (errno.EPIPE) since the server is\n        # legitimately able to close the connection after sending a valid response.\n        # With this behaviour, the received response is still readable.\n        except BrokenPipeError:\n            pass\n        except OSError as e:\n            # MacOS/Linux\n            # EPROTOTYPE and ECONNRESET are needed on macOS\n            # https://erickt.github.io/blog/2014/11/19/adventures-in-debugging-a-potential-osx-kernel-bug/\n            # Condition changed later to emit ECONNRESET instead of only EPROTOTYPE.\n            if e.errno != errno.EPROTOTYPE and e.errno != errno.ECONNRESET:\n                raise\n    \n        # Reset the timeout for the recv() on the socket\n        read_timeout = timeout_obj.read_timeout\n    \n        if not conn.is_closed:\n            # In Python 3 socket.py will catch EAGAIN and return None when you\n            # try and read into the file pointer created by http.client, which\n            # instead raises a BadStatusLine exception. Instead of catching\n            # the exception and assuming all BadStatusLine exceptions are read\n            # timeouts, check for a zero timeout before making the request.\n            if read_timeout == 0:\n                raise ReadTimeoutError(\n                    self, url, f\"Read timed out. (read timeout={read_timeout})\"\n                )\n            conn.timeout = read_timeout\n    \n        # Receive the response from the server\n        try:\n>           response = conn.getresponse()\n\n../local/lib/python3.13/site-packages/urllib3/connectionpool.py:536: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../local/lib/python3.13/site-packages/urllib3/connection.py:464: in getresponse\n    httplib_response = super().getresponse()\n../local/lib/python3.13/http/client.py:1428: in getresponse\n    response.begin()\n../local/lib/python3.13/http/client.py:331: in begin\n    version, status, reason = self._read_status()\n../local/lib/python3.13/http/client.py:292: in _read_status\n    line = str(self.fp.readline(_MAXLINE + 1), \"iso-8859-1\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <socket.SocketIO object at 0x7f0485788190>\nb = <memory at 0x7f0484b05fc0>\n\n    def readinto(self, b):\n        \"\"\"Read up to len(b) bytes into the writable buffer *b* and return\n        the number of bytes read.  If the socket is non-blocking and no bytes\n        are available, None is returned.\n    \n        If *b* is non-empty, a 0 return value indicates that the connection\n        was shutdown at the other end.\n        \"\"\"\n        self._checkClosed()\n        self._checkReadable()\n        if self._timeout_occurred:\n            raise OSError(\"cannot read from timed out object\")\n        try:\n>           return self._sock.recv_into(b)\nE           TimeoutError: timed out\n\n../local/lib/python3.13/socket.py:719: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\nrequest = <SubRequest 'driver' for <Function test_view_the_list_of_blocked_users>>\n\n    @pytest.fixture(autouse=True, scope='function')\n    def driver(request):\n        chrome_options = Options()\n        chrome_options.add_argument('--window-size=1920,1080')  # размер окна is 1920x1080\n        chrome_options.add_argument('--no-sandbox')  # no sandbox\n        chrome_options.add_argument('--disable-dev-shm-usage')  # overcome limited resource problems\n        # chrome_options.add_argument('--incognito')  # режим инкогнито\n        chrome_options.add_argument('--headless')  # режим без UI\n        # chrome_options.add_argument('--ignore-certificate-errors')  # режим игнорирования сертификата\n>       driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../local/lib/python3.13/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n../local/lib/python3.13/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n../local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n../local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py:382: in execute\n    response = self.command_executor.execute(driver_command, params)\n../local/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:404: in execute\n    return self._request(command_info[0], url, body=data)\n../local/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py:428: in _request\n    response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)\n../local/lib/python3.13/site-packages/urllib3/_request_methods.py:144: in request\n    return self.request_encode_body(\n../local/lib/python3.13/site-packages/urllib3/_request_methods.py:279: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../local/lib/python3.13/site-packages/urllib3/poolmanager.py:443: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n../local/lib/python3.13/site-packages/urllib3/connectionpool.py:843: in urlopen\n    retries = retries.increment(\n../local/lib/python3.13/site-packages/urllib3/util/retry.py:474: in increment\n    raise reraise(type(error), error, _stacktrace)\n../local/lib/python3.13/site-packages/urllib3/util/util.py:39: in reraise\n    raise value\n../local/lib/python3.13/site-packages/urllib3/connectionpool.py:789: in urlopen\n    response = self._make_request(\n../local/lib/python3.13/site-packages/urllib3/connectionpool.py:538: in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <urllib3.connectionpool.HTTPConnectionPool object at 0x7f0484b05f10>\nerr = TimeoutError('timed out'), url = '/session', timeout_value = 120\n\n    def _raise_timeout(\n        self,\n        err: BaseSSLError | OSError | SocketTimeout,\n        url: str,\n        timeout_value: _TYPE_TIMEOUT | None,\n    ) -> None:\n        \"\"\"Is the error actually a timeout? Will raise a ReadTimeout or pass\"\"\"\n    \n        if isinstance(err, SocketTimeout):\n>           raise ReadTimeoutError(\n                self, url, f\"Read timed out. (read timeout={timeout_value})\"\n            ) from err\nE           urllib3.exceptions.ReadTimeoutError: HTTPConnectionPool(host='localhost', port=42775): Read timed out. (read timeout=120)\n\n../local/lib/python3.13/site-packages/urllib3/connectionpool.py:369: ReadTimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1737925936720,"stop":1737925936721,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1737929487936,"stop":1737929620113,"duration":132177},"status":"broken","statusMessage":"urllib3.exceptions.ReadTimeoutError: HTTPConnectionPool(host='localhost', port=42775): Read timed out. (read timeout=120)\n","statusTrace":"  File \"/usr/local/lib/python3.13/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.13/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/usr/workspace/conftest.py\", line 25, in driver\n    driver = webdriver.Chrome(options=chrome_options)\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n    ~~~~~~~~~~~~~~~~^\n        browser_name=DesiredCapabilities.CHROME[\"browserName\"],\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    ...<3 lines>...\n        keep_alive=keep_alive,\n        ^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 241, in __init__\n    self.start_session(capabilities)\n    ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 329, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/webdriver.py\", line 382, in execute\n    response = self.command_executor.execute(driver_command, params)\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py\", line 404, in execute\n    return self._request(command_info[0], url, body=data)\n           ~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/remote/remote_connection.py\", line 428, in _request\n    response = self._conn.request(method, url, body=body, headers=headers, timeout=self._client_config.timeout)\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/_request_methods.py\", line 144, in request\n    return self.request_encode_body(\n           ~~~~~~~~~~~~~~~~~~~~~~~~^\n        method, url, fields=fields, headers=headers, **urlopen_kw\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/_request_methods.py\", line 279, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/poolmanager.py\", line 443, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/connectionpool.py\", line 843, in urlopen\n    retries = retries.increment(\n        method, url, error=new_e, _pool=self, _stacktrace=sys.exc_info()[2]\n    )\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/util/retry.py\", line 474, in increment\n    raise reraise(type(error), error, _stacktrace)\n          ~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/util/util.py\", line 39, in reraise\n    raise value\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/connectionpool.py\", line 789, in urlopen\n    response = self._make_request(\n        conn,\n    ...<10 lines>...\n        **response_kw,\n    )\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/connectionpool.py\", line 538, in _make_request\n    self._raise_timeout(err=e, url=url, timeout_value=read_timeout)\n    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/urllib3/connectionpool.py\", line 369, in _raise_timeout\n    raise ReadTimeoutError(\n        self, url, f\"Read timed out. (read timeout={timeout_value})\"\n    ) from err\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Инициализация локаторов","time":{"start":1737929909079,"stop":1737929909079,"duration":0},"status":"passed","steps":[{"name":"Инициализация локаторов","time":{"start":1737929909079,"stop":1737929909079,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'elements' for <Function test_there_is_information_about_the_choice_of_interests>>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Авторизация пользователя в системе","time":{"start":1737930849463,"stop":1737931005329,"duration":155866},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//div[@class=\"onboarding_container__mDp2D\"]')\n\n","statusTrace":"  File \"/usr/local/lib/python3.13/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/local/lib/python3.13/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/usr/local/lib/python3.13/site-packages/_pytest/fixtures.py\", line 898, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/usr/local/lib/python3.13/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/conftest.py\", line 58, in login_to_app\n    element = login_page.find_element(\n              ~~~~~~~~~~~~~~~~~~~~~~~^\n        config.locators.MainPageLocators.locators['Листай вниз и найди свои интересы'])\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_page.py\", line 138, in find_element\n    return self.wait.until(EC.visibility_of_element_located(locator),\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                           message=f'Не найден элемент с локатором {locator}')\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Авторизация пользователя в системе","time":{"start":1737930849466,"stop":1737931005328,"duration":155862},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//div[@class=\"onboarding_container__mDp2D\"]')\n\n","statusTrace":"  File \"/usr/local/lib/python3.13/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/conftest.py\", line 58, in login_to_app\n    element = login_page.find_element(\n              ~~~~~~~~~~~~~~~~~~~~~~~^\n        config.locators.MainPageLocators.locators['Листай вниз и найди свои интересы'])\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/base/base_page.py\", line 138, in find_element\n    return self.wait.until(EC.visibility_of_element_located(locator),\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n                           message=f'Не найден элемент с локатором {locator}')\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.13/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'login_to_app' for <Function test_pop_up_menu_click_button_favorite>>"},{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"fea7fdeebe4cb0b904cc9fe087ee1799\")>"}],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Редактирование профиля"},{"name":"tag","value":"regression"},{"name":"tag","value":"editing_profile"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_editing_profile"},{"name":"subSuite","value":"TestEditingProfile"},{"name":"host","value":"69e45c3075d5"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_editing_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":20,"unknown":0,"total":30},"items":[{"uid":"319ff4688cd62bb3","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1737842921295,"stop":1737842934423,"duration":13128}},{"uid":"115145f718e1cfb6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1737832182186,"stop":1737832194896,"duration":12710}},{"uid":"46ed8eb7aacba054","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1737799483491,"stop":1737799496329,"duration":12838}},{"uid":"ee5b3894c0338dbf","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1737757758349,"stop":1737757771154,"duration":12805}},{"uid":"542888ef82e36475","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1737744742360,"stop":1737744754971,"duration":12611}},{"uid":"325e530b803bc654","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1737652604960,"stop":1737652618011,"duration":13051}},{"uid":"dd1af01916608b9d","status":"passed","time":{"start":1737570230677,"stop":1737570270198,"duration":39521}},{"uid":"c82860cd5be2b8e8","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)","time":{"start":1737568963881,"stop":1737568963881,"duration":0}},{"uid":"9bd796fc820d5d06","status":"passed","time":{"start":1734034593653,"stop":1734034605774,"duration":12121}},{"uid":"1084b669ab5e1490","status":"passed","time":{"start":1733937251476,"stop":1733937263274,"duration":11798}},{"uid":"52e113218441e142","status":"passed","time":{"start":1733865817478,"stop":1733865831352,"duration":13874}},{"uid":"5927b618fc05088d","status":"passed","time":{"start":1733860257011,"stop":1733860269313,"duration":12302}},{"uid":"31f7b165c581d5f4","status":"passed","time":{"start":1733856840168,"stop":1733856852167,"duration":11999}},{"uid":"1fe75cbbeec55428","status":"passed","time":{"start":1733771734676,"stop":1733771748530,"duration":13854}},{"uid":"af1e8e7e0ef42975","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//button[@data-testing=\"after_register_dialog__btn_choose_later\"]')","time":{"start":1733766099461,"stop":1733766099461,"duration":0}},{"uid":"40e1d4eb715f2b96","status":"passed","time":{"start":1733421733324,"stop":1733421766389,"duration":33065}},{"uid":"94e8f61501d18178","status":"passed","time":{"start":1726780251554,"stop":1726780263869,"duration":12315}},{"uid":"307746dbed1fb76","status":"passed","time":{"start":1726776974509,"stop":1726776994064,"duration":19555}},{"uid":"ce7964a49eb04b82","status":"passed","time":{"start":1724098711375,"stop":1724098748336,"duration":36961}},{"uid":"ccb120f439a4d191","status":"passed","time":{"start":1723828904458,"stop":1723828936930,"duration":32472}}]},"tags":["editing_profile","regression"]},"source":"97eff75f0407a3e.json","parameterValues":[]}