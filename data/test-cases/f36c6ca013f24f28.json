{"uid":"f36c6ca013f24f28","name":"Проверка возможности ввода и сохранения описания на кириллице","fullName":"tests.test_editing_profile.TestEditingProfile#test_the_ability_to_enter_and_save_descriptions_in_cyrillic","historyId":"d33fe9e18f17fd9c874cba998dcc3bc4","time":{"start":1737568961883,"stop":1737568961883,"duration":0},"description":"Проверяется на пользователе Aleska, после теста о себе очищается и сохраняется","descriptionHtml":"<p>Проверяется на пользователе Aleska, после теста о себе очищается и сохраняется</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)","statusTrace":"request = <SubRequest 'driver' for <Function test_the_ability_to_enter_and_save_descriptions_in_cyrillic>>\n\n    @pytest.fixture(autouse=True, scope='function')\n    def driver(request):\n        chrome_options = Options()\n        chrome_options.add_argument('--window-size=1920,1080')  # размер окна is 1920x1080\n        # chrome_options.add_argument('--no-sandbox')  # no sandbox\n        chrome_options.add_argument('--disable-dev-shm-usage')  # overcome limited resource problems\n        # chrome_options.add_argument('--incognito')  # режим инкогнито\n        # chrome_options.add_argument('--headless')  # режим без UI\n        # chrome_options.add_argument('--ignore-certificate-errors')  # режим игнорирования сертификата\n>       driver = webdriver.Chrome(options=chrome_options)\n\nconftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n../local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:66: in __init__\n    super().__init__(command_executor=executor, options=options)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:241: in __init__\n    self.start_session(capabilities)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:329: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd55b2169c0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...r/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1737568955067,"stop":1737568955068,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1737568961883,"stop":1737568962072,"duration":189},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\n\n","statusTrace":"  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/workspace/conftest.py\", line 23, in driver\n    driver = webdriver.Chrome(options=chrome_options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 66, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 241, in __init__\n    self.start_session(capabilities)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 329, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Редактирование профиля"},{"name":"tag","value":"regression"},{"name":"tag","value":"editing_profile"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_editing_profile"},{"name":"subSuite","value":"TestEditingProfile"},{"name":"host","value":"fa278e3f9e86"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_editing_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":9,"skipped":0,"passed":14,"unknown":0,"total":24},"items":[{"uid":"5d87e41b893ff596","status":"failed","statusDetails":"AssertionError: Ожидался текст: 'Дальний дальний светило монета число. Оставить степь полностью нож угроза слать призыв.', отображается текст: 'Тут какой то большой при большой текст на много много символов, который по идее должен \uD83D\uDC4E✊\uD83D\uDC4A\uD83E\uDD1B\uD83E\uDD1C\uD83D\uDC4F\uD83D\uDE4C\uD83E\uDEF6\uD83D\uDC50\uD83E\uDD32\uD83E\uDD1D\uD83D\uDE4F✍️\uD83D\uDC85\uD83E\uDD33\uD83D\uDCAA\uD83E\uDDBE\uD83E\uDDBF\uD83E\uDDB5\uD83E\uDDB6 что то сломат'","time":{"start":1734034359909,"stop":1734034365847,"duration":5938}},{"uid":"7dea2c73b8f43952","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733937039500,"stop":1733937074057,"duration":34557}},{"uid":"30d601e10378cb8b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733865581027,"stop":1733865614862,"duration":33835}},{"uid":"32d1a929da946da2","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//button[@data-testing=\"after_register_dialog__btn_choose_later\"]')","time":{"start":1733860017293,"stop":1733860017293,"duration":0}},{"uid":"5c79cc3f92ceca3","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733856606129,"stop":1733856639698,"duration":33569}},{"uid":"df66257430889951","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//button[@data-testing=\"after_register_dialog__btn_choose_later\"]')","time":{"start":1733771493887,"stop":1733771493887,"duration":0}},{"uid":"936968dc9622af74","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733765848262,"stop":1733765881857,"duration":33595}},{"uid":"65c9ed2f3da235f6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733421564856,"stop":1733421598460,"duration":33604}},{"uid":"32661aa5ad7647d","status":"passed","time":{"start":1726780135287,"stop":1726780142093,"duration":6806}},{"uid":"17a3423e3ee6f9db","status":"passed","time":{"start":1726776846173,"stop":1726776853001,"duration":6828}},{"uid":"80a82b08164e251e","status":"passed","time":{"start":1724098476631,"stop":1724098486048,"duration":9417}},{"uid":"6e8ff48cbd4255cf","status":"passed","time":{"start":1723828640350,"stop":1723828646937,"duration":6587}},{"uid":"662ef53861375a59","status":"passed","time":{"start":1723751027139,"stop":1723751033934,"duration":6795}},{"uid":"ce3d3e9b004f6543","status":"passed","time":{"start":1723741486480,"stop":1723741493234,"duration":6754}},{"uid":"f48f2b6954c801fc","status":"broken","statusDetails":"KeyError: 'access_token'","time":{"start":1723664241756,"stop":1723664241756,"duration":0}},{"uid":"220dfb9fb881a5b7","status":"passed","time":{"start":1723578587117,"stop":1723578593866,"duration":6749}},{"uid":"c8ebdca356c422e5","status":"passed","time":{"start":1723495758571,"stop":1723495764885,"duration":6314}},{"uid":"f673722dd7a1e881","status":"passed","time":{"start":1723149679279,"stop":1723149685596,"duration":6317}},{"uid":"79f40b352bc17213","status":"passed","time":{"start":1723148387604,"stop":1723148393818,"duration":6214}},{"uid":"ba0333ec81208b5e","status":"passed","time":{"start":1723146657247,"stop":1723146663560,"duration":6313}}]},"tags":["editing_profile","regression"]},"source":"f36c6ca013f24f28.json","parameterValues":[]}