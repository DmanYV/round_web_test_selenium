{"uid":"ad062c4095dc3745","name":"Проверка валидации поля ввода кода из смс при вводе неверного значения","fullName":"tests.test_reset_password.TestResetPassword#test_receiving_sms_code_to_reset_password","historyId":"57bcb3085b34ce1268c6f60bfaf61447","time":{"start":1720800734790,"stop":1720800742749,"duration":7959},"description":"Для восстановления используется номер от Aleska","descriptionHtml":"<p>Для восстановления используется номер от Aleska</p>\n","status":"failed","statusMessage":"AssertionError: Ожидался текст: 'Код введен неверно', отображается текс: 'Неверный код подтверждения'","statusTrace":"self = <test_reset_password.TestResetPassword object at 0x7f02e5ea9af0>\nelements = {'Страница авторизации': {'Кнопка вконтакте': ('xpath', '//button[@name=\"signUpWithVK\"]'), 'Кнопка войти': ('xpath', '...ct-2-option-88'), '1927 год': ('id', 'react-select-2-option-87'), '1928 год': ('id', 'react-select-2-option-86'), ...}}\n\n    @allure.title('Проверка валидации поля ввода кода из смс при вводе неверного значения')\n    @allure.description('Для восстановления используется номер от Aleska')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_receiving_sms_code_to_reset_password(self, elements):\n        with allure.step('Открыть страницу логина'):\n            self.login_page.open()\n            element = elements['Страница логина']\n    \n        with allure.step('Нажать кнопку забыл пароль'):\n            self.login_page.do_click(element['Кнопка забыл пароль'])\n    \n        with allure.step('В поле \"Email или номер телефона\" ввести номер телефона от Aleska'):\n            element = elements['Страница восстановления пароля']\n            self.reset_password_page.field_send_keys(element['Поле логин'],\n                                                     text=self.User.PHONE)\n    \n        with allure.step('Нажать кнопку \"Сбросить пароль\"'):\n            self.reset_password_page.do_click(element['Кнопка сбросить пароль'])\n    \n        with allure.step('В поле Код из смс ввести смс код'):\n            self.reset_password_page.field_send_keys(element['Поле код из смс'],\n                                                     text=f'{fake.pyint(min_value=1000, max_value=9999)}')\n    \n        with allure.step('Проверить, что сработала валидация с текстом \"Код введен неверно\"'):\n>           self.assertion.text_in_element(element['Валидация поля код из смс'],\n                                           expected_text='Код введен неверно')\n\ntests/test_reset_password.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.base_assertion.Assertion object at 0x7f02e50bfc50>\nelement_locator = ('xpath', '//label[@class=\"text-field_validation-message__nizJJ\"]')\nexpected_text = 'Код введен неверно'\n\n    def text_in_element(self, element_locator: tuple, expected_text: str or int):\n        \"\"\"\n        Проверка совпадения текста элемента\n    \n        :param element_locator:\n            локатор элемента\n        :param expected_text:\n            ожидаемый текст\n    \n        \"\"\"\n        actual_text = self.find_element(element_locator).text\n>       assert expected_text == actual_text, f\"Ожидался текст: '{expected_text}', отображается текс: '{actual_text}'\"\nE       AssertionError: Ожидался текст: 'Код введен неверно', отображается текс: 'Неверный код подтверждения'\n\nbase/base_assertion.py:23: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1720800378062,"stop":1720800378081,"duration":19},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1720800734363,"stop":1720800734789,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"setup","time":{"start":1720800734789,"stop":1720800734790,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"elements","time":{"start":1720800734790,"stop":1720800734790,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"Для восстановления используется номер от Aleska","status":"failed","statusMessage":"AssertionError: Ожидался текст: 'Код введен неверно', отображается текс: 'Неверный код подтверждения'","statusTrace":"self = <test_reset_password.TestResetPassword object at 0x7f02e5ea9af0>\nelements = {'Страница авторизации': {'Кнопка вконтакте': ('xpath', '//button[@name=\"signUpWithVK\"]'), 'Кнопка войти': ('xpath', '...ct-2-option-88'), '1927 год': ('id', 'react-select-2-option-87'), '1928 год': ('id', 'react-select-2-option-86'), ...}}\n\n    @allure.title('Проверка валидации поля ввода кода из смс при вводе неверного значения')\n    @allure.description('Для восстановления используется номер от Aleska')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_receiving_sms_code_to_reset_password(self, elements):\n        with allure.step('Открыть страницу логина'):\n            self.login_page.open()\n            element = elements['Страница логина']\n    \n        with allure.step('Нажать кнопку забыл пароль'):\n            self.login_page.do_click(element['Кнопка забыл пароль'])\n    \n        with allure.step('В поле \"Email или номер телефона\" ввести номер телефона от Aleska'):\n            element = elements['Страница восстановления пароля']\n            self.reset_password_page.field_send_keys(element['Поле логин'],\n                                                     text=self.User.PHONE)\n    \n        with allure.step('Нажать кнопку \"Сбросить пароль\"'):\n            self.reset_password_page.do_click(element['Кнопка сбросить пароль'])\n    \n        with allure.step('В поле Код из смс ввести смс код'):\n            self.reset_password_page.field_send_keys(element['Поле код из смс'],\n                                                     text=f'{fake.pyint(min_value=1000, max_value=9999)}')\n    \n        with allure.step('Проверить, что сработала валидация с текстом \"Код введен неверно\"'):\n>           self.assertion.text_in_element(element['Валидация поля код из смс'],\n                                           expected_text='Код введен неверно')\n\ntests/test_reset_password.py:134: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.base_assertion.Assertion object at 0x7f02e50bfc50>\nelement_locator = ('xpath', '//label[@class=\"text-field_validation-message__nizJJ\"]')\nexpected_text = 'Код введен неверно'\n\n    def text_in_element(self, element_locator: tuple, expected_text: str or int):\n        \"\"\"\n        Проверка совпадения текста элемента\n    \n        :param element_locator:\n            локатор элемента\n        :param expected_text:\n            ожидаемый текст\n    \n        \"\"\"\n        actual_text = self.find_element(element_locator).text\n>       assert expected_text == actual_text, f\"Ожидался текст: '{expected_text}', отображается текс: '{actual_text}'\"\nE       AssertionError: Ожидался текст: 'Код введен неверно', отображается текс: 'Неверный код подтверждения'\n\nbase/base_assertion.py:23: AssertionError","steps":[{"name":"Открыть страницу логина","time":{"start":1720800734790,"stop":1720800736502,"duration":1712},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Нажать кнопку забыл пароль","time":{"start":1720800736502,"stop":1720800738056,"duration":1554},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"В поле \"Email или номер телефона\" ввести номер телефона от Aleska","time":{"start":1720800738056,"stop":1720800739626,"duration":1570},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Нажать кнопку \"Сбросить пароль\"","time":{"start":1720800739626,"stop":1720800739667,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"В поле Код из смс ввести смс код","time":{"start":1720800739667,"stop":1720800741221,"duration":1554},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"Проверить, что сработала валидация с текстом \"Код введен неверно\"","time":{"start":1720800741221,"stop":1720800742749,"duration":1528},"status":"failed","statusMessage":"AssertionError: Ожидался текст: 'Код введен неверно', отображается текс: 'Неверный код подтверждения'\n","statusTrace":"  File \"/usr/workspace/tests/test_reset_password.py\", line 134, in test_receiving_sms_code_to_reset_password\n    self.assertion.text_in_element(element['Валидация поля код из смс'],\n  File \"/usr/workspace/base/base_assertion.py\", line 23, in text_in_element\n    assert expected_text == actual_text, f\"Ожидался текст: '{expected_text}', отображается текс: '{actual_text}'\"\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0}],"attachments":[],"parameters":[],"stepsCount":6,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1720800742757,"stop":1720800742965,"duration":208},"status":"passed","steps":[],"attachments":[{"uid":"af8d317cbcaade13","name":"page_source","source":"af8d317cbcaade13.html","type":"text/html","size":18732},{"uid":"2ff8655141ea141b","name":"screenshot","source":"2ff8655141ea141b.png","type":"image/png","size":42730},{"uid":"7313546944f0efad","name":"browser_logs","source":"7313546944f0efad.txt","type":"text/plain","size":2451}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"attachmentsCount":3}],"labels":[{"name":"feature","value":"Восстановление пароля"},{"name":"severity","value":"Critical"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_reset_password"},{"name":"subSuite","value":"TestResetPassword"},{"name":"host","value":"bfaeb1b5a8b5"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_reset_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"73e8576e4ce62172","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//label[@class=\"phone-screen_confirm-error__q-TwZ\"]')","time":{"start":1720730397248,"stop":1720730434429,"duration":37181}}]},"tags":["regression"]},"source":"ad062c4095dc3745.json","parameterValues":[]}