{"uid":"8aa9abae129f8763","name":"Регистрация пользователя по номеру телефона","fullName":"tests.test_registration.TestRegistrationUser#test_registering_a_new_user_by_phone_number","historyId":"466fc968f032aaed759fe07653732bba","time":{"start":1721683170013,"stop":1721683184128,"duration":14115},"description":"При проверке так же проверяем, что никнейм может иметь в себе: цифры, точку (только в середине), дефис, нижнее подчеркивание","descriptionHtml":"<p>При проверке так же проверяем, что никнейм может иметь в себе: цифры, точку (только в середине), дефис, нижнее подчеркивание</p>\n","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7fb3f9526330>\nelements = {'Панель навигации': {'Кнопка главная': ('xpath', '//a[@href=\"/\"]'), 'Кнопка лента': ('xpath', '//a[@href=\"/feed\"]'), ..., 'Кнопка запросить код еще раз': ('xpath', '//button[@class=\"button_content__7wfbm button_light__j7a6Y\"]'), ...}, ...}\n\n    @allure.title('Регистрация пользователя по номеру телефона')\n    @allure.description('При проверке так же проверяем, что никнейм может иметь в себе: '\n                        'цифры, точку (только в середине), дефис, нижнее подчеркивание')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_registering_a_new_user_by_phone_number(self, elements):\n        with allure.step('Открыть страницу авторизации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n            self.authorization_page.do_click(element['Кнопка по смс'])\n    \n        with allure.step('Нажать кнопку Далее'):\n            element = elements['Страница регистрации']\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле никнейм ввести любое валидное значение'):\n            username = f'-{fake.user_name()}.{fake.pyint(min_value=1, max_value=2)}_'\n            self.join_page.field_send_keys(element['Поле никнейм'], text=f'{username}')\n    \n        with allure.step('Нажать кнопку Далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле Пароль ввести пароль'):\n            self.join_page.field_send_keys(element['Поле пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('В поле Повтори пароль ввести пароль еще раз'):\n            self.join_page.field_send_keys(element['Поле повтори пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Ввести номер телефона в поле номер телефона'):\n            phone_number = fakeru.random_number(digits=10, fix_len=True)\n            self.join_page.field_send_keys(element['Поле номер телефона'], text=phone_number)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Авторизоваться в MetaBase'):\n            metabase = self.metabase.authorization(username=self.MetaBaseUser.LOGIN,\n                                                   password=self.MetaBaseUser.PASSWORD)\n    \n        with allure.step('Найти последний код в MetaBase'):\n>           sms_code = self.metabase.take_last_code(metabase)\n\ntests/test_registration.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncookies = <RequestsCookieJar[Cookie(version=0, name='metabase.TIMEOUT', value='alive', port=None, port_specified=False, domain='...352835181, discard=False, comment=None, comment_url=None, rest={'HttpOnly': None, 'SameSite': 'None'}, rfc2109=False)]>\n\n    @staticmethod\n    def take_last_code(cookies: RequestsCookieJar) -> str:\n        \"\"\"\n        Метод получения Session_ID в Metabase через API.\n    \n        :param cookies: Куки авторизации\n        :return: last_code: Последний созданный код в таблице\n        \"\"\"\n        cookies = cookies\n        json = {\"type\": \"query\",\n                \"query\": {\"source-table\": 121,\n                          \"filter\": [\"time-interval\",\n                                     [\"field\", 726, None],\n                                     \"current\",\n                                     \"day\",\n                                     {\"include_current\": True}],\n                          \"order-by\": [[\"desc\", [\"field\", 728, None]]]},\n                \"database\": 5,\n                \"parameters\": []}\n        time.sleep(1)\n        response = requests.post(url=MetaBaseLinks.DATA_SATE, cookies=cookies, json=json)\n>       last_code = response.json()['data']['rows'][0][7]\nE       IndexError: list index out of range\n\nmodel/api/metabase.py:53: IndexError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721683115880,"stop":1721683115901,"duration":21},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"driver","time":{"start":1721683169585,"stop":1721683170013,"duration":428},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"elements","time":{"start":1721683170013,"stop":1721683170013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"setup","time":{"start":1721683170013,"stop":1721683170013,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0}],"testStage":{"description":"При проверке так же проверяем, что никнейм может иметь в себе: цифры, точку (только в середине), дефис, нижнее подчеркивание","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7fb3f9526330>\nelements = {'Панель навигации': {'Кнопка главная': ('xpath', '//a[@href=\"/\"]'), 'Кнопка лента': ('xpath', '//a[@href=\"/feed\"]'), ..., 'Кнопка запросить код еще раз': ('xpath', '//button[@class=\"button_content__7wfbm button_light__j7a6Y\"]'), ...}, ...}\n\n    @allure.title('Регистрация пользователя по номеру телефона')\n    @allure.description('При проверке так же проверяем, что никнейм может иметь в себе: '\n                        'цифры, точку (только в середине), дефис, нижнее подчеркивание')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_registering_a_new_user_by_phone_number(self, elements):\n        with allure.step('Открыть страницу авторизации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n            self.authorization_page.do_click(element['Кнопка по смс'])\n    \n        with allure.step('Нажать кнопку Далее'):\n            element = elements['Страница регистрации']\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле никнейм ввести любое валидное значение'):\n            username = f'-{fake.user_name()}.{fake.pyint(min_value=1, max_value=2)}_'\n            self.join_page.field_send_keys(element['Поле никнейм'], text=f'{username}')\n    \n        with allure.step('Нажать кнопку Далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле Пароль ввести пароль'):\n            self.join_page.field_send_keys(element['Поле пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('В поле Повтори пароль ввести пароль еще раз'):\n            self.join_page.field_send_keys(element['Поле повтори пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Ввести номер телефона в поле номер телефона'):\n            phone_number = fakeru.random_number(digits=10, fix_len=True)\n            self.join_page.field_send_keys(element['Поле номер телефона'], text=phone_number)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Авторизоваться в MetaBase'):\n            metabase = self.metabase.authorization(username=self.MetaBaseUser.LOGIN,\n                                                   password=self.MetaBaseUser.PASSWORD)\n    \n        with allure.step('Найти последний код в MetaBase'):\n>           sms_code = self.metabase.take_last_code(metabase)\n\ntests/test_registration.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncookies = <RequestsCookieJar[Cookie(version=0, name='metabase.TIMEOUT', value='alive', port=None, port_specified=False, domain='...352835181, discard=False, comment=None, comment_url=None, rest={'HttpOnly': None, 'SameSite': 'None'}, rfc2109=False)]>\n\n    @staticmethod\n    def take_last_code(cookies: RequestsCookieJar) -> str:\n        \"\"\"\n        Метод получения Session_ID в Metabase через API.\n    \n        :param cookies: Куки авторизации\n        :return: last_code: Последний созданный код в таблице\n        \"\"\"\n        cookies = cookies\n        json = {\"type\": \"query\",\n                \"query\": {\"source-table\": 121,\n                          \"filter\": [\"time-interval\",\n                                     [\"field\", 726, None],\n                                     \"current\",\n                                     \"day\",\n                                     {\"include_current\": True}],\n                          \"order-by\": [[\"desc\", [\"field\", 728, None]]]},\n                \"database\": 5,\n                \"parameters\": []}\n        time.sleep(1)\n        response = requests.post(url=MetaBaseLinks.DATA_SATE, cookies=cookies, json=json)\n>       last_code = response.json()['data']['rows'][0][7]\nE       IndexError: list index out of range\n\nmodel/api/metabase.py:53: IndexError","steps":[{"name":"Открыть страницу авторизации","time":{"start":1721683170013,"stop":1721683172731,"duration":2718},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Нажать кнопку \"По смс (Для России)\"","time":{"start":1721683172731,"stop":1721683174285,"duration":1554},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Нажать кнопку Далее","time":{"start":1721683174285,"stop":1721683175833,"duration":1548},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"В поле никнейм ввести любое валидное значение","time":{"start":1721683175833,"stop":1721683177411,"duration":1578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Нажать кнопку Далее","time":{"start":1721683177411,"stop":1721683177449,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"В поле Пароль ввести пароль","time":{"start":1721683177449,"stop":1721683179001,"duration":1552},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"В поле Повтори пароль ввести пароль еще раз","time":{"start":1721683179001,"stop":1721683179048,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Нажать кнопку далее","time":{"start":1721683179048,"stop":1721683179088,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Ввести номер телефона в поле номер телефона","time":{"start":1721683179088,"stop":1721683180650,"duration":1562},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Нажать кнопку далее","time":{"start":1721683180650,"stop":1721683180689,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Авторизоваться в MetaBase","time":{"start":1721683180689,"stop":1721683181933,"duration":1244},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0},{"name":"Найти последний код в MetaBase","time":{"start":1721683181933,"stop":1721683184127,"duration":2194},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"/usr/workspace/tests/test_registration.py\", line 60, in test_registering_a_new_user_by_phone_number\n    sms_code = self.metabase.take_last_code(metabase)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/model/api/metabase.py\", line 53, in take_last_code\n    last_code = response.json()['data']['rows'][0][7]\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":12,"hasContent":true,"attachmentStep":false,"attachmentsCount":0},"afterStages":[{"name":"driver::0","time":{"start":1721683184177,"stop":1721683184364,"duration":187},"status":"passed","steps":[],"attachments":[{"uid":"46c7b68198e97b64","name":"page_source","source":"46c7b68198e97b64.html","type":"text/html","size":13206},{"uid":"83568c2ef127b6e0","name":"screenshot","source":"83568c2ef127b6e0.png","type":"image/png","size":21682},{"uid":"9ac3d9666da64bb1","name":"browser_logs","source":"9ac3d9666da64bb1.txt","type":"text/plain","size":2199}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":3}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Регистрация пользователя"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_registration"},{"name":"subSuite","value":"TestRegistrationUser"},{"name":"host","value":"09567fd04e0a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":6,"skipped":0,"passed":17,"unknown":0,"total":25},"items":[{"uid":"2e564d195b5203fd","status":"passed","time":{"start":1721671721731,"stop":1721671736971,"duration":15240}},{"uid":"a15b9009acc65466","status":"passed","time":{"start":1721668537775,"stop":1721668552363,"duration":14588}},{"uid":"824acb15129cd30","status":"passed","time":{"start":1720802701837,"stop":1720802717884,"duration":16047}},{"uid":"a6838e430fa439ef","status":"passed","time":{"start":1720800418645,"stop":1720800433802,"duration":15157}},{"uid":"c81962e54bda2a17","status":"passed","time":{"start":1720730058566,"stop":1720730072634,"duration":14068}},{"uid":"2012be972e21849f","status":"passed","time":{"start":1720638874831,"stop":1720638889379,"duration":14548}},{"uid":"d16b6ddb37cc8b60","status":"failed","statusDetails":"AssertionError: Ожидался текст: 'Привет, -christopherjensen.2_\nДобро пожаловать в Round!', отображается текс: 'Привет, -christopherjens\nДобро пожаловать в Round!'","time":{"start":1720637683144,"stop":1720637700887,"duration":17743}},{"uid":"fb4e8d25cea3fbb1","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//div[contains(@class,\"registration-success_header_\")]')","time":{"start":1720637248306,"stop":1720637291139,"duration":42833}},{"uid":"15b3c9b3c636bb2f","status":"passed","time":{"start":1720553862387,"stop":1720553878274,"duration":15887}},{"uid":"6c91848033423348","status":"passed","time":{"start":1720551797098,"stop":1720551811417,"duration":14319}},{"uid":"de83f5c1a0d12f72","status":"failed","statusDetails":"AssertionError: Ожидался текст: 'Привет, -colliermargaret.1_\nДобро пожаловать в Round!', отображается текс: 'Привет, -colliermargaret\nДобро пожаловать в Round!'","time":{"start":1720551331981,"stop":1720551346101,"duration":14120}},{"uid":"edb062e76566fc94","status":"passed","time":{"start":1720546215538,"stop":1720546229692,"duration":14154}},{"uid":"180e0191afd4139e","status":"passed","time":{"start":1720470578636,"stop":1720470594229,"duration":15593}},{"uid":"114611f2aad12bf4","status":"passed","time":{"start":1720469360532,"stop":1720469376267,"duration":15735}},{"uid":"25ceba6203c24139","status":"passed","time":{"start":1720469133920,"stop":1720469148592,"duration":14672}},{"uid":"cee8df918a068d16","status":"passed","time":{"start":1720468862021,"stop":1720468876750,"duration":14729}},{"uid":"c4bd45dc509b2ef6","status":"passed","time":{"start":1720242406734,"stop":1720242421022,"duration":14288}},{"uid":"a64871cbacc248d0","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//input[@name=\"password\"]')","time":{"start":1720241739849,"stop":1720241777040,"duration":37191}},{"uid":"3145a6ccf6a1a4f3","status":"passed","time":{"start":1720208082465,"stop":1720208097955,"duration":15490}},{"uid":"a70a6552fd2641b9","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//div[@class=\"registration-success_header__D5-xJ\"]')","time":{"start":1720207057469,"stop":1720207101087,"duration":43618}}]},"tags":["regression"]},"source":"8aa9abae129f8763.json","parameterValues":[]}