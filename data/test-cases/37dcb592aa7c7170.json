{"uid":"37dcb592aa7c7170","name":"Проверка возможности отписаться","fullName":"tests.test_profile.TestProfile#test_opportunities_to_unsubscribe","historyId":"6405cb8b7e5512e7579024ee130ab35a","time":{"start":1738952254754,"stop":1738952258969,"duration":4215},"description":"Перед проверкой проводится подписка на первого пользователя в списке","descriptionHtml":"<p>Перед проверкой проводится подписка на первого пользователя в списке</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <test_profile.TestProfile object at 0x7fa250a89760>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\nregistration_user = None, subscribe_user = None\n\n    @allure.title('Проверка возможности отписаться')\n    @allure.description('Перед проверкой проводится подписка на первого пользователя в списке')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_opportunities_to_unsubscribe(self, elements, registration_user, subscribe_user):\n        with allure.step('Нажать на кнопку профиль'):\n            self.app.profile_button_click()\n    \n        with allure.step('Нажать заполню позже'):\n            element_profile = elements['Профиль пользователя']\n            self.profile_page.do_click(element_profile['Кнопка заполню позже'])\n    \n        with allure.step('Запомнить количество подписчиков'):\n            time.sleep(3)\n            self.assertion.text_in_element(element_profile['Подписки'], expected_text= '1')\n    \n        with allure.step('Отписаться от пользователя'):\n>           self.subscription_page.unsubscribe_user()\n\ntests/test_profile.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodel/pages/subscription_page.py:33: in unsubscribe_user\n    self.app.do_click(config.locators.ProfilePageLocators.locators['Кнопка заполню позже'])\nbase/base_page.py:79: in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa24fb718b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1738951121724,"stop":1738951121726,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Установка соединения с БД","time":{"start":1738952233871,"stop":1738952235746,"duration":1875},"status":"passed","steps":[{"name":"Установка соединения с БД","time":{"start":1738952233871,"stop":1738952235746,"duration":1875},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'db_connection' for <Function test_opportunities_to_unsubscribe>>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"driver","time":{"start":1738952235746,"stop":1738952236160,"duration":414},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1738952236160,"stop":1738952236161,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Регистрация пользователя","time":{"start":1738952236161,"stop":1738952251942,"duration":15781},"status":"passed","steps":[{"name":"Регистрация пользователя","time":{"start":1738952236161,"stop":1738952251942,"duration":15781},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6c853320cfbfd395dd31a3f120bad35\")>"},{"name":"db_connection","value":"<psycopg.Connection [IDLE] (host=rc1a-8gbxfgy3ifeqz75r.mdb.yandexcloud.net port=6432 user=dyanyshev database=staging_round_confirmation) at 0x7fa24fb722d0>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Инициализация локаторов","time":{"start":1738952236161,"stop":1738952236161,"duration":0},"status":"passed","steps":[{"name":"Инициализация локаторов","time":{"start":1738952236161,"stop":1738952236161,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'elements' for <Function test_opportunities_to_unsubscribe>>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Подписка на пользователя первого в списке","time":{"start":1738952251942,"stop":1738952254754,"duration":2812},"status":"passed","steps":[{"name":"Подписка на пользователя первого в списке","time":{"start":1738952251942,"stop":1738952254754,"duration":2812},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"a6c853320cfbfd395dd31a3f120bad35\")>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"Перед проверкой проводится подписка на первого пользователя в списке","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <test_profile.TestProfile object at 0x7fa250a89760>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\nregistration_user = None, subscribe_user = None\n\n    @allure.title('Проверка возможности отписаться')\n    @allure.description('Перед проверкой проводится подписка на первого пользователя в списке')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_opportunities_to_unsubscribe(self, elements, registration_user, subscribe_user):\n        with allure.step('Нажать на кнопку профиль'):\n            self.app.profile_button_click()\n    \n        with allure.step('Нажать заполню позже'):\n            element_profile = elements['Профиль пользователя']\n            self.profile_page.do_click(element_profile['Кнопка заполню позже'])\n    \n        with allure.step('Запомнить количество подписчиков'):\n            time.sleep(3)\n            self.assertion.text_in_element(element_profile['Подписки'], expected_text= '1')\n    \n        with allure.step('Отписаться от пользователя'):\n>           self.subscription_page.unsubscribe_user()\n\ntests/test_profile.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodel/pages/subscription_page.py:33: in unsubscribe_user\n    self.app.do_click(config.locators.ProfilePageLocators.locators['Кнопка заполню позже'])\nbase/base_page.py:79: in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa24fb718b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","steps":[{"name":"Нажать на кнопку профиль","time":{"start":1738952254755,"stop":1738952254800,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать заполню позже","time":{"start":1738952254800,"stop":1738952255878,"duration":1078},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Запомнить количество подписчиков","time":{"start":1738952255878,"stop":1738952258894,"duration":3016},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Отписаться от пользователя","time":{"start":1738952258894,"stop":1738952258968,"duration":74},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/workspace/tests/test_profile.py\", line 201, in test_opportunities_to_unsubscribe\n    self.subscription_page.unsubscribe_user()\n  File \"/usr/workspace/model/pages/subscription_page.py\", line 33, in unsubscribe_user\n    self.app.do_click(config.locators.ProfilePageLocators.locators['Кнопка заполню позже'])\n  File \"/usr/workspace/base/base_page.py\", line 79, in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1738952259027,"stop":1738952259220,"duration":193},"status":"passed","steps":[],"attachments":[{"uid":"a0ac30913db6ec1","name":"page_source","source":"a0ac30913db6ec1.html","type":"text/html","size":12697},{"uid":"6d005b3308b82688","name":"screenshot","source":"6d005b3308b82688.png","type":"image/png","size":13659},{"uid":"8b15a7e887d66165","name":"browser_logs","source":"8b15a7e887d66165.txt","type":"text/plain","size":7143}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Установка соединения с БД::fin","time":{"start":1738952310000,"stop":1738952310000,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Профиль пользователя"},{"name":"tag","value":"regression"},{"name":"tag","value":"profile"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_profile"},{"name":"subSuite","value":"TestProfile"},{"name":"host","value":"591fc66adb53"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":12,"skipped":0,"passed":28,"unknown":0,"total":42},"items":[{"uid":"8283936096db2a7d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1738875261524,"stop":1738875261524,"duration":0}},{"uid":"5eb2695f5f2543fc","status":"passed","time":{"start":1738872459824,"stop":1738872472378,"duration":12554}},{"uid":"8c48b88b043af763","status":"passed","time":{"start":1738865336631,"stop":1738865348159,"duration":11528}},{"uid":"cfb2902e6cbbf93f","status":"passed","time":{"start":1738269359098,"stop":1738269368666,"duration":9568}},{"uid":"ee699acb6e38350e","status":"passed","time":{"start":1738099831999,"stop":1738099841518,"duration":9519}},{"uid":"63ca652e47f574e6","status":"passed","time":{"start":1738005684461,"stop":1738005693971,"duration":9510}},{"uid":"bb64ddce2ebdbf10","status":"passed","time":{"start":1738002961599,"stop":1738002972617,"duration":11018}},{"uid":"1b4896987f6d27c9","status":"broken","statusDetails":"urllib3.exceptions.ReadTimeoutError: HTTPConnectionPool(host='localhost', port=58861): Read timed out. (read timeout=120)","time":{"start":1737932773657,"stop":1737932773657,"duration":0}},{"uid":"5be701a4ad55c226","status":"passed","time":{"start":1737843346852,"stop":1737843359395,"duration":12543}},{"uid":"355de74e0823146a","status":"passed","time":{"start":1737832530079,"stop":1737832539619,"duration":9540}},{"uid":"6fbca41532e545af","status":"passed","time":{"start":1737799894578,"stop":1737799904101,"duration":9523}},{"uid":"13d125c3bab9f82e","status":"passed","time":{"start":1737758129538,"stop":1737758139043,"duration":9505}},{"uid":"1730b2751e3701d8","status":"passed","time":{"start":1737745120547,"stop":1737745130049,"duration":9502}},{"uid":"aaa29418f507122b","status":"passed","time":{"start":1737653016335,"stop":1737653034873,"duration":18538}},{"uid":"978bd9d2a278d297","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//input[@name=\"nickname\"]')","time":{"start":1737570666606,"stop":1737570666606,"duration":0}},{"uid":"7904a8e07367ca9f","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)","time":{"start":1737568968827,"stop":1737568968827,"duration":0}},{"uid":"701f89ff6794d60b","status":"failed","statusDetails":"AssertionError: Ожидался текст: '8', отображается текст: '9'","time":{"start":1734034930681,"stop":1734034936278,"duration":5597}},{"uid":"8254426a7bf997f3","status":"passed","time":{"start":1733937695248,"stop":1733937702375,"duration":7127}},{"uid":"62baa085303ffa7d","status":"passed","time":{"start":1733866237463,"stop":1733866244499,"duration":7036}},{"uid":"9d1fb92147d0d396","status":"passed","time":{"start":1733860696713,"stop":1733860703933,"duration":7220}}]},"tags":["regression","profile"]},"source":"37dcb592aa7c7170.json","parameterValues":[]}