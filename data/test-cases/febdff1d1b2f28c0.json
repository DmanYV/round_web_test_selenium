{"uid":"febdff1d1b2f28c0","name":"Проверка открытия профиля пользователя","fullName":"tests.test_profile.TestProfile#test_open_user_profile","historyId":"cb3a9a33dfaeeaf73af18c868aa1fa39","time":{"start":1721668503562,"stop":1721668537115,"duration":33553},"description":"Проверяется, что при нажатии кнопки открывается профиль и видно Никнейм пользователя","descriptionHtml":"<p>Проверяется, что при нажатии кнопки открывается профиль и видно Никнейм пользователя</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_profile.TestProfile object at 0x7f362777d790>\nelements = {'Панель навигации': {'Кнопка главная': ('xpath', '//a[@href=\"/\"]'), 'Кнопка лента': ('xpath', '//a[@href=\"/feed\"]'), ..., 'Кнопка запросить код еще раз': ('xpath', '//button[@class=\"button_content__7wfbm button_light__j7a6Y\"]'), ...}, ...}\n\n    @allure.title('Проверка открытия профиля пользователя')\n    @allure.description('Проверяется, что при нажатии кнопки открывается профиль и видно Никнейм пользователя')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_open_user_profile(self, elements):\n        with allure.step('Открыть страницу логина'):\n            self.login_page.open()\n            element = elements['Страница логина']\n    \n        with allure.step('В поле логина вводим валидный никнейм'):\n            self.login_page.field_send_keys(element['Поле логин'], self.User.LOGIN)\n    \n        with allure.step('В поле пароля вводим валидный пароль'):\n            self.login_page.field_send_keys(element['Поле пароль'], self.User.PASSWORD)\n    \n        with allure.step('Нажать кнопку \"Войти\"'):\n            self.login_page.do_click(element['Кнопка войти'])\n    \n        with allure.step('Нажать кнопку'):\n            element = elements['Панель навигации']\n>           self.app.do_click(element['Кнопка профиль'])\n\ntests/test_profile.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:62: in do_click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"883ed56bddac6029ced0a2b286e77bf0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f36283f71a0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721668465746,"stop":1721668465766,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1721668503132,"stop":1721668503561,"duration":429},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1721668503561,"stop":1721668503561,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"elements","time":{"start":1721668503561,"stop":1721668503561,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверяется, что при нажатии кнопки открывается профиль и видно Никнейм пользователя","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_profile.TestProfile object at 0x7f362777d790>\nelements = {'Панель навигации': {'Кнопка главная': ('xpath', '//a[@href=\"/\"]'), 'Кнопка лента': ('xpath', '//a[@href=\"/feed\"]'), ..., 'Кнопка запросить код еще раз': ('xpath', '//button[@class=\"button_content__7wfbm button_light__j7a6Y\"]'), ...}, ...}\n\n    @allure.title('Проверка открытия профиля пользователя')\n    @allure.description('Проверяется, что при нажатии кнопки открывается профиль и видно Никнейм пользователя')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_open_user_profile(self, elements):\n        with allure.step('Открыть страницу логина'):\n            self.login_page.open()\n            element = elements['Страница логина']\n    \n        with allure.step('В поле логина вводим валидный никнейм'):\n            self.login_page.field_send_keys(element['Поле логин'], self.User.LOGIN)\n    \n        with allure.step('В поле пароля вводим валидный пароль'):\n            self.login_page.field_send_keys(element['Поле пароль'], self.User.PASSWORD)\n    \n        with allure.step('Нажать кнопку \"Войти\"'):\n            self.login_page.do_click(element['Кнопка войти'])\n    \n        with allure.step('Нажать кнопку'):\n            element = elements['Панель навигации']\n>           self.app.do_click(element['Кнопка профиль'])\n\ntests/test_profile.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:62: in do_click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"883ed56bddac6029ced0a2b286e77bf0\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f36283f71a0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","steps":[{"name":"Открыть страницу логина","time":{"start":1721668503562,"stop":1721668505352,"duration":1790},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В поле логина вводим валидный никнейм","time":{"start":1721668505352,"stop":1721668506911,"duration":1559},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В поле пароля вводим валидный пароль","time":{"start":1721668506912,"stop":1721668506959,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку \"Войти\"","time":{"start":1721668506959,"stop":1721668506999,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку","time":{"start":1721668506999,"stop":1721668537114,"duration":30115},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/usr/workspace/tests/test_profile.py\", line 32, in test_open_user_profile\n    self.app.do_click(element['Кнопка профиль'])\n  File \"/usr/workspace/base/base_page.py\", line 62, in do_click\n    self.wait.until(EC.element_to_be_clickable(locator)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1721668537156,"stop":1721668537345,"duration":189},"status":"passed","steps":[],"attachments":[{"uid":"f5862ad7b64ae3d2","name":"page_source","source":"f5862ad7b64ae3d2.html","type":"text/html","size":13914},{"uid":"fc7283e56662f2b3","name":"screenshot","source":"fc7283e56662f2b3.png","type":"image/png","size":25786},{"uid":"c6c5b1868e18f11","name":"browser_logs","source":"c6c5b1868e18f11.txt","type":"text/plain","size":1769}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Профиль пользователя"},{"name":"severity","value":"Critical"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_profile"},{"name":"subSuite","value":"TestProfile"},{"name":"host","value":"e08606e299a2"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["regression"]},"source":"febdff1d1b2f28c0.json","parameterValues":[]}