{"uid":"a8b9bf1a64598ee8","name":"Проверка возможности выбора возраста пользователя","fullName":"tests.test_registration.TestRegistrationUser#test_checking_the_user_age_choice_during_registration","historyId":"e029937761b940e7f0ffa12b82cd60c9","time":{"start":1737653095029,"stop":1737653102206,"duration":7177},"status":"failed","statusMessage":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\n2011'","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7f6ae657f740>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\n\n    @allure.title('Проверка возможности выбора возраста пользователя')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_checking_the_user_age_choice_during_registration(self, elements):\n        with allure.step('Открыть страницу регистрации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n            self.authorization_page.do_click(element['Кнопка по смс'])\n    \n        with allure.step('Нажать на выпадающий список с датами рождения'):\n            element = elements['Страница регистрации']\n            self.join_page.do_click(element['Поле год рождения'])\n        with allure.step('В выпадающем списке выбрать поочередно с 2014 по 2010 год'):\n            self.join_page.do_click(element['2014 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2013 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2012 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2011 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2010 год'])\n        with allure.step('Проверить, что в поле теперь отображается 2010 год'):\n>           self.assertion.text_in_element(element['Поле год рождения'], expected_text='2010')\n\ntests/test_registration.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.base_assertion.Assertion object at 0x7f6ae654e090>\nby_locator = ('xpath', '//div[@data-testing=\"join_birthday_year\"]')\nexpected_text = '2010'\n\n    def text_in_element(self, by_locator, expected_text: str or int):\n        \"\"\"\n        Проверка совпадения текста элемента\n    \n        :param by_locator:\n            локатор элемента\n        :param expected_text:\n            ожидаемый текст\n    \n        \"\"\"\n    \n        text_in_element = self.find_element(by_locator).text\n>       assert expected_text == text_in_element, \\\n            f\"Ожидался текст: '{expected_text}', отображается текст: '{text_in_element}'\"\nE       AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\nE       2011'\n\nbase/base_assertion.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1737651677163,"stop":1737651677164,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1737653094614,"stop":1737653095029,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Инициализация локаторов","time":{"start":1737653095029,"stop":1737653095029,"duration":0},"status":"passed","steps":[{"name":"Инициализация локаторов","time":{"start":1737653095029,"stop":1737653095029,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'elements' for <Function test_checking_the_user_age_choice_during_registration>>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"setup","time":{"start":1737653095029,"stop":1737653095029,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\n2011'","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7f6ae657f740>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\n\n    @allure.title('Проверка возможности выбора возраста пользователя')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_checking_the_user_age_choice_during_registration(self, elements):\n        with allure.step('Открыть страницу регистрации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n            self.authorization_page.do_click(element['Кнопка по смс'])\n    \n        with allure.step('Нажать на выпадающий список с датами рождения'):\n            element = elements['Страница регистрации']\n            self.join_page.do_click(element['Поле год рождения'])\n        with allure.step('В выпадающем списке выбрать поочередно с 2014 по 2010 год'):\n            self.join_page.do_click(element['2014 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2013 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2012 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2011 год'])\n            self.join_page.do_click(element['Поле год рождения'])\n            self.join_page.do_click(element['2010 год'])\n        with allure.step('Проверить, что в поле теперь отображается 2010 год'):\n>           self.assertion.text_in_element(element['Поле год рождения'], expected_text='2010')\n\ntests/test_registration.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <base.base_assertion.Assertion object at 0x7f6ae654e090>\nby_locator = ('xpath', '//div[@data-testing=\"join_birthday_year\"]')\nexpected_text = '2010'\n\n    def text_in_element(self, by_locator, expected_text: str or int):\n        \"\"\"\n        Проверка совпадения текста элемента\n    \n        :param by_locator:\n            локатор элемента\n        :param expected_text:\n            ожидаемый текст\n    \n        \"\"\"\n    \n        text_in_element = self.find_element(by_locator).text\n>       assert expected_text == text_in_element, \\\n            f\"Ожидался текст: '{expected_text}', отображается текст: '{text_in_element}'\"\nE       AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\nE       2011'\n\nbase/base_assertion.py:25: AssertionError","steps":[{"name":"Открыть страницу регистрации","time":{"start":1737653095029,"stop":1737653097551,"duration":2522},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку \"По смс (Для России)\"","time":{"start":1737653097551,"stop":1737653101231,"duration":3680},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать на выпадающий список с датами рождения","time":{"start":1737653101231,"stop":1737653101798,"duration":567},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В выпадающем списке выбрать поочередно с 2014 по 2010 год","time":{"start":1737653101798,"stop":1737653102184,"duration":386},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверить, что в поле теперь отображается 2010 год","time":{"start":1737653102184,"stop":1737653102206,"duration":22},"status":"failed","statusMessage":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\n2011'\n","statusTrace":"  File \"/usr/workspace/tests/test_registration.py\", line 95, in test_checking_the_user_age_choice_during_registration\n    self.assertion.text_in_element(element['Поле год рождения'], expected_text='2010')\n  File \"/usr/workspace/base/base_assertion.py\", line 25, in text_in_element\n    assert expected_text == text_in_element, \\\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1737653102223,"stop":1737653102427,"duration":204},"status":"passed","steps":[],"attachments":[{"uid":"acf01337e7ae2d03","name":"page_source","source":"acf01337e7ae2d03.html","type":"text/html","size":10431},{"uid":"68c5524d51890f7f","name":"screenshot","source":"68c5524d51890f7f.png","type":"image/png","size":20028},{"uid":"8514456847dd7145","name":"browser_logs","source":"8514456847dd7145.txt","type":"text/plain","size":2113}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Регистрация пользователя"},{"name":"tag","value":"regression"},{"name":"tag","value":"registration"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_registration"},{"name":"subSuite","value":"TestRegistrationUser"},{"name":"host","value":"fca5ebb10398"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":6,"skipped":0,"passed":47,"unknown":0,"total":56},"items":[{"uid":"6ecd9ddd7aea1767","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\n2011'","time":{"start":1737570806537,"stop":1737570814034,"duration":7497}},{"uid":"30b71e3a6e37e8f3","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)","time":{"start":1737568969942,"stop":1737568969942,"duration":0}},{"uid":"f29696be1ab71740","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2010, selected.\n2010'","time":{"start":1734034986226,"stop":1734034992249,"duration":6023}},{"uid":"669f80cb0216e888","status":"passed","time":{"start":1733937802714,"stop":1733937807935,"duration":5221}},{"uid":"75707a90b01ca76b","status":"passed","time":{"start":1733866375365,"stop":1733866380900,"duration":5535}},{"uid":"f2c40415f10a8e31","status":"passed","time":{"start":1733860775253,"stop":1733860780703,"duration":5450}},{"uid":"36561d581490ca0d","status":"passed","time":{"start":1733857315979,"stop":1733857321864,"duration":5885}},{"uid":"eb25b04c163afb37","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733772247829,"stop":1733772262511,"duration":14682}},{"uid":"3f03152a0eeac86f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733766720760,"stop":1733766735277,"duration":14517}},{"uid":"5dc9e6ef0db6a1a8","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733422324936,"stop":1733422339442,"duration":14506}},{"uid":"8c1ae5d14092f1ee","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1726780648756,"stop":1726780660667,"duration":11911}},{"uid":"d08a1f6db4523d81","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1726777417128,"stop":1726777429828,"duration":12700}},{"uid":"a0c215599c0b2fe","status":"passed","time":{"start":1724099149932,"stop":1724099155048,"duration":5116}},{"uid":"39b29be432434025","status":"passed","time":{"start":1723829481239,"stop":1723829486616,"duration":5377}},{"uid":"f13eb1f02f2cee34","status":"passed","time":{"start":1723751637611,"stop":1723751641656,"duration":4045}},{"uid":"854b64f8c15e0d23","status":"passed","time":{"start":1723742093498,"stop":1723742097618,"duration":4120}},{"uid":"87cab10d0dff0236","status":"passed","time":{"start":1723664470786,"stop":1723664475201,"duration":4415}},{"uid":"e9330e42728aa5fc","status":"passed","time":{"start":1723579228778,"stop":1723579234039,"duration":5261}},{"uid":"a3ad59d488fc513f","status":"passed","time":{"start":1723496404803,"stop":1723496408875,"duration":4072}},{"uid":"430870db56c70562","status":"passed","time":{"start":1723150201116,"stop":1723150206086,"duration":4970}}]},"tags":["regression","registration"]},"source":"a8b9bf1a64598ee8.json","parameterValues":[]}