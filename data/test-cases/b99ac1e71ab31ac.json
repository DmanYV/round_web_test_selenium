{"uid":"b99ac1e71ab31ac","name":"Проверка получения email кода для сброса пароля","fullName":"tests.test_reset_password.TestResetPassword#test_receiving_email_code_to_reset_password","historyId":"047cc1a50ab58d07ccc636e1125930b4","time":{"start":1721942935202,"stop":1721942943032,"duration":7830},"description":"Для восстановления используется email от Aleska","descriptionHtml":"<p>Для восстановления используется email от Aleska</p>\n","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_reset_password.TestResetPassword object at 0x7fb75d0e5310>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'.//button[@class=\"header_back__yUNba\"]'), 'Кнопка кэррот': ('xpath', '//div[@class=\"header_info__CHSYI\"]'), ...}, ...}\n\n    @allure.title('Проверка получения email кода для сброса пароля')\n    @allure.description('Для восстановления используется email от Aleska')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_receiving_email_code_to_reset_password(self, elements):\n        with allure.step('Открыть страницу логина'):\n            self.login_page.open()\n            element = elements['Страница логина']\n    \n        with allure.step('Нажать кнопку забыл пароль'):\n            self.login_page.do_click(element['Кнопка забыл пароль'])\n    \n        with allure.step('В поле \"Email или номер телефона\" ввести email от Aleska'):\n            element = elements['Страница восстановления пароля']\n            self.reset_password_page.field_send_keys(element['Поле логин'],\n                                                     text=self.User.EMAIL)\n    \n        with allure.step('Нажать кнопку \"Сбросить пароль\"'):\n            self.reset_password_page.do_click(element['Кнопка сбросить пароль'])\n    \n        with allure.step('Авторизоваться в MetaBase'):\n            metabase = self.metabase.authorization(username=self.MetaBaseUser.LOGIN,\n                                                   password=self.MetaBaseUser.PASSWORD)\n    \n        with allure.step('Найти последний код в MetaBase и проверить, что он пришел'):\n>           email_code = self.metabase.take_last_code(metabase)\n\ntests/test_reset_password.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncookies = <RequestsCookieJar[Cookie(version=0, name='metabase.TIMEOUT', value='alive', port=None, port_specified=False, domain='...353094941, discard=False, comment=None, comment_url=None, rest={'HttpOnly': None, 'SameSite': 'None'}, rfc2109=False)]>\n\n    @staticmethod\n    def take_last_code(cookies: RequestsCookieJar) -> str:\n        \"\"\"\n        Метод получения Session_ID в Metabase через API.\n    \n        :param cookies: Куки авторизации\n        :return: last_code: Последний созданный код в таблице\n        \"\"\"\n        cookies = cookies\n        json = {\"type\": \"query\",\n                \"query\": {\"source-table\": 121,\n                          \"filter\": [\"time-interval\",\n                                     [\"field\", 726, None],\n                                     \"current\",\n                                     \"day\",\n                                     {\"include_current\": True}],\n                          \"order-by\": [[\"desc\", [\"field\", 728, None]]]},\n                \"database\": 5,\n                \"parameters\": []}\n        time.sleep(1)\n        response = requests.post(url=MetaBaseLinks.DATA_SATE, cookies=cookies, json=json)\n>       last_code = response.json()['data']['rows'][0][7]\nE       IndexError: list index out of range\n\nmodel/api/metabase.py:53: IndexError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721942567862,"stop":1721942567882,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1721942934775,"stop":1721942935202,"duration":427},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1721942935202,"stop":1721942935202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"elements","time":{"start":1721942935202,"stop":1721942935202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Для восстановления используется email от Aleska","status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_reset_password.TestResetPassword object at 0x7fb75d0e5310>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'.//button[@class=\"header_back__yUNba\"]'), 'Кнопка кэррот': ('xpath', '//div[@class=\"header_info__CHSYI\"]'), ...}, ...}\n\n    @allure.title('Проверка получения email кода для сброса пароля')\n    @allure.description('Для восстановления используется email от Aleska')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_receiving_email_code_to_reset_password(self, elements):\n        with allure.step('Открыть страницу логина'):\n            self.login_page.open()\n            element = elements['Страница логина']\n    \n        with allure.step('Нажать кнопку забыл пароль'):\n            self.login_page.do_click(element['Кнопка забыл пароль'])\n    \n        with allure.step('В поле \"Email или номер телефона\" ввести email от Aleska'):\n            element = elements['Страница восстановления пароля']\n            self.reset_password_page.field_send_keys(element['Поле логин'],\n                                                     text=self.User.EMAIL)\n    \n        with allure.step('Нажать кнопку \"Сбросить пароль\"'):\n            self.reset_password_page.do_click(element['Кнопка сбросить пароль'])\n    \n        with allure.step('Авторизоваться в MetaBase'):\n            metabase = self.metabase.authorization(username=self.MetaBaseUser.LOGIN,\n                                                   password=self.MetaBaseUser.PASSWORD)\n    \n        with allure.step('Найти последний код в MetaBase и проверить, что он пришел'):\n>           email_code = self.metabase.take_last_code(metabase)\n\ntests/test_reset_password.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncookies = <RequestsCookieJar[Cookie(version=0, name='metabase.TIMEOUT', value='alive', port=None, port_specified=False, domain='...353094941, discard=False, comment=None, comment_url=None, rest={'HttpOnly': None, 'SameSite': 'None'}, rfc2109=False)]>\n\n    @staticmethod\n    def take_last_code(cookies: RequestsCookieJar) -> str:\n        \"\"\"\n        Метод получения Session_ID в Metabase через API.\n    \n        :param cookies: Куки авторизации\n        :return: last_code: Последний созданный код в таблице\n        \"\"\"\n        cookies = cookies\n        json = {\"type\": \"query\",\n                \"query\": {\"source-table\": 121,\n                          \"filter\": [\"time-interval\",\n                                     [\"field\", 726, None],\n                                     \"current\",\n                                     \"day\",\n                                     {\"include_current\": True}],\n                          \"order-by\": [[\"desc\", [\"field\", 728, None]]]},\n                \"database\": 5,\n                \"parameters\": []}\n        time.sleep(1)\n        response = requests.post(url=MetaBaseLinks.DATA_SATE, cookies=cookies, json=json)\n>       last_code = response.json()['data']['rows'][0][7]\nE       IndexError: list index out of range\n\nmodel/api/metabase.py:53: IndexError","steps":[{"name":"Открыть страницу логина","time":{"start":1721942935203,"stop":1721942937245,"duration":2042},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку забыл пароль","time":{"start":1721942937245,"stop":1721942938801,"duration":1556},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В поле \"Email или номер телефона\" ввести email от Aleska","time":{"start":1721942938801,"stop":1721942940386,"duration":1585},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку \"Сбросить пароль\"","time":{"start":1721942940386,"stop":1721942940427,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Авторизоваться в MetaBase","time":{"start":1721942940427,"stop":1721942941405,"duration":978},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Найти последний код в MetaBase и проверить, что он пришел","time":{"start":1721942941405,"stop":1721942943032,"duration":1627},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"/usr/workspace/tests/test_reset_password.py\", line 260, in test_receiving_email_code_to_reset_password\n    email_code = self.metabase.take_last_code(metabase)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/model/api/metabase.py\", line 53, in take_last_code\n    last_code = response.json()['data']['rows'][0][7]\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":6,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1721942943039,"stop":1721942943224,"duration":185},"status":"passed","steps":[],"attachments":[{"uid":"943b24e12a8f451b","name":"page_source","source":"943b24e12a8f451b.html","type":"text/html","size":18845},{"uid":"6f90d81452629cad","name":"screenshot","source":"6f90d81452629cad.png","type":"image/png","size":42015},{"uid":"565b80ec5df4a7c0","name":"browser_logs","source":"565b80ec5df4a7c0.txt","type":"text/plain","size":2230}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Восстановление пароля"},{"name":"severity","value":"Critical"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_reset_password"},{"name":"subSuite","value":"TestResetPassword"},{"name":"host","value":"154a2dd0ae07"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_reset_password"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":5,"unknown":0,"total":7},"items":[{"uid":"b568cf18f3bcd1e6","status":"passed","time":{"start":1721851075863,"stop":1721851083108,"duration":7245}},{"uid":"a40639c39405d207","status":"broken","statusDetails":"IndexError: list index out of range","time":{"start":1721683411923,"stop":1721683420716,"duration":8793}},{"uid":"cca8889a4c0169ce","status":"passed","time":{"start":1721672019011,"stop":1721672026737,"duration":7726}},{"uid":"f8207bf687033c29","status":"passed","time":{"start":1721668856180,"stop":1721668863859,"duration":7679}},{"uid":"f9e8102392495b7e","status":"passed","time":{"start":1720803078431,"stop":1720803087583,"duration":9152}},{"uid":"d5687689f1a65cad","status":"passed","time":{"start":1720800796822,"stop":1720800805204,"duration":8382}}]},"tags":["regression"]},"source":"b99ac1e71ab31ac.json","parameterValues":[]}