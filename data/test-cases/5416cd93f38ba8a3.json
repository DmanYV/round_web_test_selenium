{"uid":"5416cd93f38ba8a3","name":"Проверка возможности подписаться","fullName":"tests.test_profile.TestProfile#test_opportunities_to_subscribe","historyId":"8837be03da4b857171429e7b0d59755b","time":{"start":1738952232456,"stop":1738952233625,"duration":1169},"description":"После проверки, отписываемся от пользователя для приведения в исходное состояние","descriptionHtml":"<p>После проверки, отписываемся от пользователя для приведения в исходное состояние</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <test_profile.TestProfile object at 0x7fa250a8a540>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\nlogin_to_app = None\n\n    @allure.title('Проверка возможности подписаться')\n    @allure.description('После проверки, отписываемся от пользователя для приведения в исходное состояние')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_opportunities_to_subscribe(self, elements, login_to_app):\n        with allure.step('Нажать на кнопку профиль'):\n            self.app.profile_button_click()\n    \n        with allure.step('Запомнить количество подписчиков'):\n            element = elements['Профиль пользователя']\n            subscribers = int(self.profile_page.get_element_text(element['Подписки']))\n    \n        with allure.step('Подписаться на первого пользователя'):\n>           self.subscription_page.subscribe_user()\n\ntests/test_profile.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodel/pages/subscription_page.py:21: in subscribe_user\n    self.do_click(config.locators.ProfilePageLocators.locators['Подписки'])\nbase/base_page.py:79: in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa2501d4680>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1738951121724,"stop":1738951121726,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1738952224477,"stop":1738952224896,"duration":419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1738952224896,"stop":1738952224896,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Инициализация локаторов","time":{"start":1738952224896,"stop":1738952224896,"duration":0},"status":"passed","steps":[{"name":"Инициализация локаторов","time":{"start":1738952224896,"stop":1738952224896,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'elements' for <Function test_opportunities_to_subscribe>>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false},{"name":"Авторизация пользователя в системе","time":{"start":1738952224896,"stop":1738952232456,"duration":7560},"status":"passed","steps":[{"name":"Авторизация пользователя в системе","time":{"start":1738952224896,"stop":1738952232456,"duration":7560},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'login_to_app' for <Function test_opportunities_to_subscribe>>"},{"name":"driver","value":"<selenium.webdriver.chrome.webdriver.WebDriver (session=\"b8f34adc671cb35bc3dc7f51f44f6160\")>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"description":"После проверки, отписываемся от пользователя для приведения в исходное состояние","status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <test_profile.TestProfile object at 0x7fa250a8a540>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\nlogin_to_app = None\n\n    @allure.title('Проверка возможности подписаться')\n    @allure.description('После проверки, отписываемся от пользователя для приведения в исходное состояние')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_opportunities_to_subscribe(self, elements, login_to_app):\n        with allure.step('Нажать на кнопку профиль'):\n            self.app.profile_button_click()\n    \n        with allure.step('Запомнить количество подписчиков'):\n            element = elements['Профиль пользователя']\n            subscribers = int(self.profile_page.get_element_text(element['Подписки']))\n    \n        with allure.step('Подписаться на первого пользователя'):\n>           self.subscription_page.subscribe_user()\n\ntests/test_profile.py:167: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodel/pages/subscription_page.py:21: in subscribe_user\n    self.do_click(config.locators.ProfilePageLocators.locators['Подписки'])\nbase/base_page.py:79: in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa2501d4680>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","steps":[{"name":"Нажать на кнопку профиль","time":{"start":1738952232456,"stop":1738952232510,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Запомнить количество подписчиков","time":{"start":1738952232511,"stop":1738952233550,"duration":1039},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Подписаться на первого пользователя","time":{"start":1738952233550,"stop":1738952233624,"duration":74},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/workspace/tests/test_profile.py\", line 167, in test_opportunities_to_subscribe\n    self.subscription_page.subscribe_user()\n  File \"/usr/workspace/model/pages/subscription_page.py\", line 21, in subscribe_user\n    self.do_click(config.locators.ProfilePageLocators.locators['Подписки'])\n  File \"/usr/workspace/base/base_page.py\", line 79, in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1738952233668,"stop":1738952233870,"duration":202},"status":"passed","steps":[],"attachments":[{"uid":"72d8734413dbf75d","name":"page_source","source":"72d8734413dbf75d.html","type":"text/html","size":11569},{"uid":"88c960d114e94fdb","name":"screenshot","source":"88c960d114e94fdb.png","type":"image/png","size":15025},{"uid":"5f248b8560e5e09e","name":"browser_logs","source":"5f248b8560e5e09e.txt","type":"text/plain","size":30405}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Профиль пользователя"},{"name":"tag","value":"regression"},{"name":"tag","value":"profile"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_profile"},{"name":"subSuite","value":"TestProfile"},{"name":"host","value":"591fc66adb53"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_profile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":11,"skipped":0,"passed":19,"unknown":0,"total":42},"items":[{"uid":"1ebf252b33a6b2c5","status":"broken","statusDetails":"KeyError: 'access_token'","time":{"start":1738875260341,"stop":1738875260341,"duration":0}},{"uid":"47c5616a81a9004f","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","time":{"start":1738872432097,"stop":1738872433761,"duration":1664}},{"uid":"e0eaddd146eee04a","status":"broken","statusDetails":"KeyError: 'access_token'","time":{"start":1738865312078,"stop":1738865312078,"duration":0}},{"uid":"83a1d83d3050f111","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1738269328664,"stop":1738269334101,"duration":5437}},{"uid":"393fc5fb81706fa9","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1738099800199,"stop":1738099808600,"duration":8401}},{"uid":"1a1c26198a21bd47","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1738005655996,"stop":1738005661415,"duration":5419}},{"uid":"bb37ea67897004f9","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1738002934635,"stop":1738002940052,"duration":5417}},{"uid":"41baf7984698b959","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.83); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","time":{"start":1737932558826,"stop":1737932558826,"duration":0}},{"uid":"c64e506b5b3bf6fd","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737843315212,"stop":1737843322169,"duration":6957}},{"uid":"44c71df5ac64d686","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737832501768,"stop":1737832508742,"duration":6974}},{"uid":"ce1adce00b0b9cd","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737799865822,"stop":1737799872800,"duration":6978}},{"uid":"c3ba876983d362af","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737758099860,"stop":1737758106847,"duration":6987}},{"uid":"681cab165fc587d7","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737745092073,"stop":1737745099043,"duration":6970}},{"uid":"6412b3cf34021890","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737652984595,"stop":1737652992082,"duration":7487}},{"uid":"6f9148b3096adb32","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2', отображается текст: '1'","time":{"start":1737570658842,"stop":1737570666395,"duration":7553}},{"uid":"1a48054d733defb1","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)","time":{"start":1737568968602,"stop":1737568968602,"duration":0}},{"uid":"5f1fbecb0e9504cc","status":"failed","statusDetails":"AssertionError: Ожидался текст: '8', отображается текст: '7'","time":{"start":1734034910933,"stop":1734034917944,"duration":7011}},{"uid":"6c8e11255c7cf244","status":"passed","time":{"start":1733937646919,"stop":1733937656990,"duration":10071}},{"uid":"89eff593bf137b2d","status":"passed","time":{"start":1733866218449,"stop":1733866227027,"duration":8578}},{"uid":"74fe727b4307f185","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//button[@data-testing=\"after_register_dialog__btn_choose_later\"]')","time":{"start":1733860651908,"stop":1733860651908,"duration":0}}]},"tags":["regression","profile"]},"source":"5416cd93f38ba8a3.json","parameterValues":[]}