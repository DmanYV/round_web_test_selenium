{"uid":"66f456bd1e9b353","name":"Проверка возможности выбора возраста пользователя","fullName":"tests.test_registration.TestRegistrationUser#test_checking_the_user_age_choice_during_registration","historyId":"e029937761b940e7f0ffa12b82cd60c9","time":{"start":1738865358844,"stop":1738865362945,"duration":4101},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7f0ee2de4980>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\n\n    @allure.title('Проверка возможности выбора возраста пользователя')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_checking_the_user_age_choice_during_registration(self, elements):\n        with allure.step('Открыть страницу регистрации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n>           self.authorization_page.do_click(element['Кнопка по смс'])\n\ntests/test_registration.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:79: in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0ee3962ab0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1738864340794,"stop":1738864340795,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1738865358428,"stop":1738865358843,"duration":415},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1738865358843,"stop":1738865358843,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Инициализация локаторов","time":{"start":1738865358843,"stop":1738865358844,"duration":1},"status":"passed","steps":[{"name":"Инициализация локаторов","time":{"start":1738865358844,"stop":1738865358844,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"request","value":"<SubRequest 'elements' for <Function test_checking_the_user_age_choice_during_registration>>"}],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7f0ee2de4980>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'carrot-messenger-frame'), 'Чат кэррот': ('xpath', '//div[contains(@class,\"carrot-messenger-frame-container\")]')}, ...}\n\n    @allure.title('Проверка возможности выбора возраста пользователя')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_checking_the_user_age_choice_during_registration(self, elements):\n        with allure.step('Открыть страницу регистрации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n>           self.authorization_page.do_click(element['Кнопка по смс'])\n\ntests/test_registration.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase/base_page.py:79: in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:364: in _predicate\n    element = visibility_of(target)(driver)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:173: in _predicate\n    return _element_if_visible(element)\n../local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:179: in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0ee3962ab0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is not attached to the page document\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:232: StaleElementReferenceException","steps":[{"name":"Открыть страницу регистрации","time":{"start":1738865358844,"stop":1738865361013,"duration":2169},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку \"По смс (Для России)\"","time":{"start":1738865361013,"stop":1738865362944,"duration":1931},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: headless chrome=112.0.5615.165); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\n\n","statusTrace":"  File \"/usr/workspace/tests/test_registration.py\", line 75, in test_checking_the_user_age_choice_during_registration\n    self.authorization_page.do_click(element['Кнопка по смс'])\n  File \"/usr/workspace/base/base_page.py\", line 79, in do_click\n    elem = WebDriverWait(self.driver, wait_time).until(EC.element_to_be_clickable(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 364, in _predicate\n    element = visibility_of(target)(driver)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 173, in _predicate\n    return _element_if_visible(element)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 179, in _element_if_visible\n    return element if element.is_displayed() == visibility else False\n                      ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 252, in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1738865362992,"stop":1738865363722,"duration":730},"status":"passed","steps":[],"attachments":[{"uid":"92b19e5dff21b401","name":"page_source","source":"92b19e5dff21b401.html","type":"text/html","size":4994},{"uid":"2350ab50684e95d","name":"screenshot","source":"2350ab50684e95d.png","type":"image/png","size":10996},{"uid":"f925dd1f148a00aa","name":"browser_logs","source":"f925dd1f148a00aa.txt","type":"text/plain","size":1594}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"feature","value":"Регистрация пользователя"},{"name":"severity","value":"Critical"},{"name":"tag","value":"regression"},{"name":"tag","value":"registration"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_registration"},{"name":"subSuite","value":"TestRegistrationUser"},{"name":"host","value":"6af98febc332"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":8,"skipped":0,"passed":56,"unknown":0,"total":67},"items":[{"uid":"19e6eb2c757e054","status":"passed","time":{"start":1738269425635,"stop":1738269432397,"duration":6762}},{"uid":"c18f8870da1b8627","status":"passed","time":{"start":1738099919303,"stop":1738099925931,"duration":6628}},{"uid":"46861a77501d1682","status":"passed","time":{"start":1738005748154,"stop":1738005755151,"duration":6997}},{"uid":"bb47967fc2d3b553","status":"passed","time":{"start":1738003022036,"stop":1738003028190,"duration":6154}},{"uid":"85a78c1c620b2a4a","status":"broken","statusDetails":"urllib3.exceptions.ReadTimeoutError: HTTPConnectionPool(host='localhost', port=40397): Read timed out. (read timeout=120)","time":{"start":1737933483855,"stop":1737933483855,"duration":0}},{"uid":"d54a0163dbd4397c","status":"passed","time":{"start":1737843416567,"stop":1737843423719,"duration":7152}},{"uid":"8a9f1abe5b1093a4","status":"passed","time":{"start":1737832592261,"stop":1737832597947,"duration":5686}},{"uid":"dcf576af01eecd3b","status":"passed","time":{"start":1737799957245,"stop":1737799963335,"duration":6090}},{"uid":"8b436196a816363c","status":"passed","time":{"start":1737758194268,"stop":1737758201358,"duration":7090}},{"uid":"b860ee0c02ea85d","status":"passed","time":{"start":1737745182898,"stop":1737745188686,"duration":5788}},{"uid":"a8b9bf1a64598ee8","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\n2011'","time":{"start":1737653095029,"stop":1737653102206,"duration":7177}},{"uid":"6ecd9ddd7aea1767","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2011, selected.\n2011'","time":{"start":1737570806537,"stop":1737570814034,"duration":7497}},{"uid":"30b71e3a6e37e8f3","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)","time":{"start":1737568969942,"stop":1737568969942,"duration":0}},{"uid":"f29696be1ab71740","status":"failed","statusDetails":"AssertionError: Ожидался текст: '2010', отображается текст: 'option 2010, selected.\n2010'","time":{"start":1734034986226,"stop":1734034992249,"duration":6023}},{"uid":"669f80cb0216e888","status":"passed","time":{"start":1733937802714,"stop":1733937807935,"duration":5221}},{"uid":"75707a90b01ca76b","status":"passed","time":{"start":1733866375365,"stop":1733866380900,"duration":5535}},{"uid":"f2c40415f10a8e31","status":"passed","time":{"start":1733860775253,"stop":1733860780703,"duration":5450}},{"uid":"36561d581490ca0d","status":"passed","time":{"start":1733857315979,"stop":1733857321864,"duration":5885}},{"uid":"eb25b04c163afb37","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733772247829,"stop":1733772262511,"duration":14682}},{"uid":"3f03152a0eeac86f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1733766720760,"stop":1733766735277,"duration":14517}}]},"tags":["regression","registration"]},"source":"66f456bd1e9b353.json","parameterValues":[]}