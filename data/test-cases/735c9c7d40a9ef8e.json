{"uid":"735c9c7d40a9ef8e","name":"Проверка возможности повторно запросить код","fullName":"tests.test_registration.TestRegistrationUser#test_possibility_to_re_request_code","historyId":"ef31b3e2b3bc8b4cc4572fc19380c64f","time":{"start":1721942760384,"stop":1721942773219,"duration":12835},"status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7fb75de88b90>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'.//button[@class=\"header_back__yUNba\"]'), 'Кнопка кэррот': ('xpath', '//div[@class=\"header_info__CHSYI\"]'), ...}, ...}\n\n    @allure.title('Проверка возможности повторно запросить код')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_possibility_to_re_request_code(self, elements):\n        with allure.step('Открыть страницу авторизации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n            self.authorization_page.do_click(element['Кнопка по смс'])\n    \n        with allure.step('Нажать кнопку Далее'):\n            element = elements['Страница регистрации']\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле никнейм ввести любое валидное значение'):\n            username = f'-{fake.user_name()}.{fake.pyint(min_value=1, max_value=2)}_'\n            self.join_page.field_send_keys(element['Поле никнейм'], text=f'{username}')\n    \n        with allure.step('Нажать кнопку Далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле Пароль ввести пароль'):\n            self.join_page.field_send_keys(element['Поле пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('В поле Повтори пароль ввести пароль еще раз'):\n            self.join_page.field_send_keys(element['Поле повтори пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Ввести номер телефона в поле номер телефона'):\n            phone_number = fakeru.random_number(digits=10, fix_len=True)\n            self.join_page.field_send_keys(element['Поле номер телефона'], text=phone_number)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Авторизоваться в MetaBase'):\n            metabase = self.metabase.authorization(username=self.MetaBaseUser.LOGIN,\n                                                   password=self.MetaBaseUser.PASSWORD)\n    \n        with allure.step('Запомнить пришедший код'):\n>           first_sms_code = self.metabase.take_last_code(metabase)\n\ntests/test_registration.py:327: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncookies = <RequestsCookieJar[Cookie(version=0, name='metabase.TIMEOUT', value='alive', port=None, port_specified=False, domain='...353094771, discard=False, comment=None, comment_url=None, rest={'HttpOnly': None, 'SameSite': 'None'}, rfc2109=False)]>\n\n    @staticmethod\n    def take_last_code(cookies: RequestsCookieJar) -> str:\n        \"\"\"\n        Метод получения Session_ID в Metabase через API.\n    \n        :param cookies: Куки авторизации\n        :return: last_code: Последний созданный код в таблице\n        \"\"\"\n        cookies = cookies\n        json = {\"type\": \"query\",\n                \"query\": {\"source-table\": 121,\n                          \"filter\": [\"time-interval\",\n                                     [\"field\", 726, None],\n                                     \"current\",\n                                     \"day\",\n                                     {\"include_current\": True}],\n                          \"order-by\": [[\"desc\", [\"field\", 728, None]]]},\n                \"database\": 5,\n                \"parameters\": []}\n        time.sleep(1)\n        response = requests.post(url=MetaBaseLinks.DATA_SATE, cookies=cookies, json=json)\n>       last_code = response.json()['data']['rows'][0][7]\nE       IndexError: list index out of range\n\nmodel/api/metabase.py:53: IndexError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721942567862,"stop":1721942567882,"duration":20},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1721942759948,"stop":1721942760383,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1721942760384,"stop":1721942760384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"elements","time":{"start":1721942760384,"stop":1721942760384,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_registration.TestRegistrationUser object at 0x7fb75de88b90>\nelements = {'Банк ачивок': {'Блок ачивок': ('xpath', '//div[contains(@class,\"user-achievement-by-interests_container\")]'), 'Модал...'.//button[@class=\"header_back__yUNba\"]'), 'Кнопка кэррот': ('xpath', '//div[@class=\"header_info__CHSYI\"]'), ...}, ...}\n\n    @allure.title('Проверка возможности повторно запросить код')\n    @allure.severity('Critical')\n    @pytest.mark.regression\n    def test_possibility_to_re_request_code(self, elements):\n        with allure.step('Открыть страницу авторизации'):\n            self.authorization_page.open()\n            element = elements['Страница авторизации']\n    \n        with allure.step('Нажать кнопку \"По смс (Для России)\"'):\n            self.authorization_page.do_click(element['Кнопка по смс'])\n    \n        with allure.step('Нажать кнопку Далее'):\n            element = elements['Страница регистрации']\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле никнейм ввести любое валидное значение'):\n            username = f'-{fake.user_name()}.{fake.pyint(min_value=1, max_value=2)}_'\n            self.join_page.field_send_keys(element['Поле никнейм'], text=f'{username}')\n    \n        with allure.step('Нажать кнопку Далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('В поле Пароль ввести пароль'):\n            self.join_page.field_send_keys(element['Поле пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('В поле Повтори пароль ввести пароль еще раз'):\n            self.join_page.field_send_keys(element['Поле повтори пароль'], text=self.User.PASSWORD)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Ввести номер телефона в поле номер телефона'):\n            phone_number = fakeru.random_number(digits=10, fix_len=True)\n            self.join_page.field_send_keys(element['Поле номер телефона'], text=phone_number)\n    \n        with allure.step('Нажать кнопку далее'):\n            self.join_page.do_click(element['Кнопка далее'])\n    \n        with allure.step('Авторизоваться в MetaBase'):\n            metabase = self.metabase.authorization(username=self.MetaBaseUser.LOGIN,\n                                                   password=self.MetaBaseUser.PASSWORD)\n    \n        with allure.step('Запомнить пришедший код'):\n>           first_sms_code = self.metabase.take_last_code(metabase)\n\ntests/test_registration.py:327: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncookies = <RequestsCookieJar[Cookie(version=0, name='metabase.TIMEOUT', value='alive', port=None, port_specified=False, domain='...353094771, discard=False, comment=None, comment_url=None, rest={'HttpOnly': None, 'SameSite': 'None'}, rfc2109=False)]>\n\n    @staticmethod\n    def take_last_code(cookies: RequestsCookieJar) -> str:\n        \"\"\"\n        Метод получения Session_ID в Metabase через API.\n    \n        :param cookies: Куки авторизации\n        :return: last_code: Последний созданный код в таблице\n        \"\"\"\n        cookies = cookies\n        json = {\"type\": \"query\",\n                \"query\": {\"source-table\": 121,\n                          \"filter\": [\"time-interval\",\n                                     [\"field\", 726, None],\n                                     \"current\",\n                                     \"day\",\n                                     {\"include_current\": True}],\n                          \"order-by\": [[\"desc\", [\"field\", 728, None]]]},\n                \"database\": 5,\n                \"parameters\": []}\n        time.sleep(1)\n        response = requests.post(url=MetaBaseLinks.DATA_SATE, cookies=cookies, json=json)\n>       last_code = response.json()['data']['rows'][0][7]\nE       IndexError: list index out of range\n\nmodel/api/metabase.py:53: IndexError","steps":[{"name":"Открыть страницу авторизации","time":{"start":1721942760384,"stop":1721942762576,"duration":2192},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку \"По смс (Для России)\"","time":{"start":1721942762576,"stop":1721942764132,"duration":1556},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку Далее","time":{"start":1721942764132,"stop":1721942765681,"duration":1549},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В поле никнейм ввести любое валидное значение","time":{"start":1721942765681,"stop":1721942767262,"duration":1581},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку Далее","time":{"start":1721942767262,"stop":1721942767301,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В поле Пароль ввести пароль","time":{"start":1721942767301,"stop":1721942768856,"duration":1555},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"В поле Повтори пароль ввести пароль еще раз","time":{"start":1721942768856,"stop":1721942768902,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку далее","time":{"start":1721942768902,"stop":1721942768944,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Ввести номер телефона в поле номер телефона","time":{"start":1721942768944,"stop":1721942770508,"duration":1564},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Нажать кнопку далее","time":{"start":1721942770508,"stop":1721942770548,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Авторизоваться в MetaBase","time":{"start":1721942770548,"stop":1721942771228,"duration":680},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Запомнить пришедший код","time":{"start":1721942771228,"stop":1721942773219,"duration":1991},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"/usr/workspace/tests/test_registration.py\", line 327, in test_possibility_to_re_request_code\n    first_sms_code = self.metabase.take_last_code(metabase)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/workspace/model/api/metabase.py\", line 53, in take_last_code\n    last_code = response.json()['data']['rows'][0][7]\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":12,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1721942773232,"stop":1721942773430,"duration":198},"status":"passed","steps":[],"attachments":[{"uid":"c6eb31e18bb3801f","name":"page_source","source":"c6eb31e18bb3801f.html","type":"text/html","size":13206},{"uid":"96efe8dbe0446e87","name":"screenshot","source":"96efe8dbe0446e87.png","type":"image/png","size":21475},{"uid":"4163eae5ca1ddf58","name":"browser_logs","source":"4163eae5ca1ddf58.txt","type":"text/plain","size":2199}],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":3,"stepsCount":0,"hasContent":true,"attachmentStep":false}],"labels":[{"name":"severity","value":"Critical"},{"name":"feature","value":"Регистрация пользователя"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_registration"},{"name":"subSuite","value":"TestRegistrationUser"},{"name":"host","value":"154a2dd0ae07"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_registration"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":14,"unknown":0,"total":17},"items":[{"uid":"c429d82b8a947ece","status":"passed","time":{"start":1721850857658,"stop":1721850937456,"duration":79798}},{"uid":"f9783ff2eb0f0177","status":"broken","statusDetails":"IndexError: list index out of range","time":{"start":1721683253333,"stop":1721683267260,"duration":13927}},{"uid":"d640fbd32dbd3214","status":"passed","time":{"start":1721671797197,"stop":1721671876705,"duration":79508}},{"uid":"2a8cd06601bfd72d","status":"passed","time":{"start":1721668636688,"stop":1721668715843,"duration":79155}},{"uid":"57392528255c24c5","status":"passed","time":{"start":1720802814438,"stop":1720802895984,"duration":81546}},{"uid":"332cafd7e301979","status":"passed","time":{"start":1720800522366,"stop":1720800602400,"duration":80034}},{"uid":"e6727dccb4bfb920","status":"passed","time":{"start":1720730186608,"stop":1720730266103,"duration":79495}},{"uid":"c48a995bb0605d11","status":"passed","time":{"start":1720638981137,"stop":1720639061421,"duration":80284}},{"uid":"b8c6c56b07b3d1a2","status":"passed","time":{"start":1720637807538,"stop":1720637890248,"duration":82710}},{"uid":"c023f82e5bfe3b81","status":"passed","time":{"start":1720637379509,"stop":1720637458983,"duration":79474}},{"uid":"c51e3792eadb5411","status":"passed","time":{"start":1720553978670,"stop":1720554061849,"duration":83179}},{"uid":"a8107a2a2d1493c9","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: Не найден элемент с локатором ('xpath', '//input[@name=\"password\"]')","time":{"start":1720551900367,"stop":1720551936961,"duration":36594}},{"uid":"825eef63bd317428","status":"passed","time":{"start":1720551434901,"stop":1720551514762,"duration":79861}},{"uid":"92ee62226872f01","status":"passed","time":{"start":1720546319921,"stop":1720546399784,"duration":79863}},{"uid":"182879c2989c2e8f","status":"passed","time":{"start":1720470710107,"stop":1720470790121,"duration":80014}},{"uid":"6ed1ec59af3205b6","status":"passed","time":{"start":1720469474078,"stop":1720469554836,"duration":80758}}]},"tags":["regression"]},"source":"735c9c7d40a9ef8e.json","parameterValues":[]}